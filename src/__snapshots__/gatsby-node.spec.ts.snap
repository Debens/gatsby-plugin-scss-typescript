// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gatsby-plugin-sass given stage build-html when creating webpack config and passing no options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage build-html when creating webpack config css loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage build-html when creating webpack config sass loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage build-javascript when creating webpack config and passing no options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage build-javascript when creating webpack config css loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage build-javascript when creating webpack config sass loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": false,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": false,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop when creating webpack config and passing no options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop when creating webpack config css loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop when creating webpack config sass loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop-html when creating webpack config and passing no options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop-html when creating webpack config css loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "importLoaders": 1,
                        "localIdentName": "[name]_[local]___[hash:base64:5]_[emoji:1]",
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`gatsby-plugin-sass given stage develop-html when creating webpack config sass loader options then should configure the config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "module": Object {
          "rules": Array [
            Object {
              "oneOf": Array [
                Object {
                  "test": /\\\\\\.module\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "@teamsupercell/typings-for-css-modules-loader",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": Object {
                        "modules": Object {
                          "namedExport": false,
                        },
                      },
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": true,
                      },
                    },
                  ],
                },
                Object {
                  "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
                  "use": Array [
                    Object {
                      "loader": "/node_modules/style-loader/index.js",
                    },
                    Object {
                      "loader": "/node_modules/css-loader/dist/cjs.js",
                      "options": undefined,
                    },
                    Object {
                      "loader": "/node_modules/postcss-loader/src/index.js",
                    },
                    Object {
                      "loader": "resolve-url-loader",
                    },
                    Object {
                      "loader": "sass-loader",
                      "options": Object {
                        "includePaths": Array [
                          "absolute/path/a",
                          "absolute/path/b",
                        ],
                        "sourceMap": true,
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "optimization": Object {
          "minimizer": Array [
            "minifyCss(undefined)",
          ],
        },
        "plugins": Array [
          "extractText(undefined)",
          "ignore(/css\\\\.d\\\\.ts$/)",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
